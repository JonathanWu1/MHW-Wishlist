{"version":3,"sources":["components/InputRow.js","logo.svg","components/WeaponTableHeader.js","components/WeaponTable.js","components/MaterialsTable.js","components/InputTable.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["InputRow","props","rowData","state","includeSubaugments","slotsUsed","totalSlots","extraSlotsLevel","attackLevel","affinityLevel","healthLevel","elementLevel","weaponName","weaponRarity","slotOverflow","extraSlotsLevelOld","attackLevelOld","affinityLevelOld","healthLevelOld","elementLevelOld","weaponNameOld","weaponRarityOld","readOnly","handleSubaugmentsChange","bind","clearWeapon","saveWeapon","handleAugmentsChange","extraSlotPerLevelRarity","augmentSlotRequirements","errorStyle","color","border","event","this","setState","target","checked","weaponDataList","eval","localStorage","getItem","rowIndex","setItem","JSON","stringify","refreshWeaponData","push","stateObject","x","id","value","console","log","split","prevState","Fragment","className","classname","key","onChange","val","style","defaultChecked","name","onClick","Component","module","exports","WeaponTableHeader","WeaponTable","renderTableData","deleteWeapon","editWeapon","saveEditedWeapon","nextProps","index","splice","map","weapon","MaterialsRow","materialName","materialQuantity","MaterialsTable","augmentsList","parseInt","i","materialsDict","rarity","augmentName","augmentMaterial","recipies","Object","keys","InputTable","Main","parse","App","Boolean","window","location","hostname","match","routing","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1179475d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Toggle from 'react-toggle'\r\nexport default class InputRow extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        if(this.props.rowData){\r\n            this.state = this.props.rowData\r\n        }\r\n        else{\r\n            this.state = {\r\n                includeSubaugments  : true,\r\n                slotsUsed           : 0,\r\n                totalSlots          : 3,\r\n                extraSlotsLevel     : 0,\r\n                attackLevel         : 0,\r\n                affinityLevel       : 0,\r\n                healthLevel         : 0,\r\n                elementLevel        : 0,\r\n                weaponName          : '',\r\n                weaponRarity        : 12,\r\n                slotOverflow        : false,\r\n                extraSlotsLevelOld  : 0,\r\n                attackLevelOld      : 0,\r\n                affinityLevelOld    : 0,\r\n                healthLevelOld      : 0,\r\n                elementLevelOld     : 0,\r\n                weaponNameOld       : '',\r\n                weaponRarityOld     : 12,\r\n                readOnly            : true,\r\n            }\r\n        }\r\n        \r\n        this.handleSubaugmentsChange = this.handleSubaugmentsChange.bind(this)\r\n        this.clearWeapon = this.clearWeapon.bind(this)\r\n        this.saveWeapon = this.saveWeapon.bind(this)\r\n        this.handleAugmentsChange = this.handleAugmentsChange.bind(this)\r\n        this.extraSlotPerLevelRarity = this.props.extraSlotPerLevelRarity\r\n        this.augmentSlotRequirements = this.props.augmentSlotRequirements\r\n        this.errorStyle = {\r\n            color : 'red',\r\n            border : 'solid red',\r\n        }\r\n    }\r\n    handleSubaugmentsChange(event) {\r\n        // do something with event.target.checked\r\n        this.setState(\r\n            {\r\n                includeSubaugments : event.target.checked\r\n            }\r\n        ) \r\n    }\r\n    \r\n    saveWeapon(){      \r\n        if(this.state.slotsUsed <= this.state.totalSlots){\r\n            var weaponDataList = eval(localStorage.getItem('weaponDataList'))\r\n            if(weaponDataList === null){\r\n                weaponDataList = [this.state]\r\n            }\r\n            else if(this.props.rowIndex >= 0){\r\n                this.setState({\r\n                    readOnly : true\r\n                },()=>{\r\n                    weaponDataList[this.props.rowIndex] = this.state\r\n                    localStorage.setItem('weaponDataList', JSON.stringify(weaponDataList))\r\n                    this.props.refreshWeaponData(weaponDataList)\r\n                    this.clearWeapon()\r\n                })\r\n                \r\n            }\r\n            else{\r\n                weaponDataList.push(this.state)\r\n                localStorage.setItem('weaponDataList', JSON.stringify(weaponDataList))\r\n                this.props.refreshWeaponData(weaponDataList)\r\n                this.clearWeapon()\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                slotOverflow : true\r\n            })\r\n        }\r\n    }\r\n    clearWeapon(){\r\n        this.setState(\r\n            {\r\n                slotsUsed           : 0,\r\n                totalSlots          : 3,\r\n                extraSlotsLevel     : 0,\r\n                attackLevel         : 0,\r\n                affinityLevel       : 0,\r\n                healthLevel         : 0,\r\n                elementLevel        : 0,\r\n                weaponName          : '',\r\n                weaponRarity        : 12,\r\n                slotOverflow        : false,\r\n                extraSlotsLevelOld  : 0,\r\n                attackLevelOld      : 0,\r\n                affinityLevelOld    : 0,\r\n                healthLevelOld      : 0,\r\n                elementLevelOld     : 0,\r\n                weaponNameOld       : '',\r\n                weaponRarityOld     : 12,\r\n                readOnly            : true,\r\n            }\r\n        ) \r\n    }\r\n    handleAugmentsChange(event){\r\n        var stateObject = {}\r\n        let slotsUsed = 0\r\n        let totalSlots\r\n\r\n        if(event.target.id === 'extraSlotsLevel'){  \r\n            stateObject['extraSlotsLevel'] = event.target.value\r\n            stateObject['totalSlots'] = this.extraSlotPerLevelRarity[this.state.weaponRarity][event.target.value]\r\n            totalSlots = this.extraSlotPerLevelRarity[this.state.weaponRarity][event.target.value]\r\n        }\r\n        else if(event.target.id === 'weaponName'){\r\n            console.log(event.target.value)\r\n            stateObject['weaponName'] = event.target.value\r\n        }\r\n        else{\r\n            stateObject[event.target.id] = event.target.value\r\n            if(event.target.value > this.state[event.target.id.split('Old')[0]]){\r\n                stateObject[event.target.id.split('Old')[0]] = event.target.value\r\n            }\r\n            if(event.target.value < this.state[event.target.id.split('Old')[0]]){\r\n                stateObject[event.target.id.split('Old')[0] + 'Old'] = event.target.value\r\n            }\r\n            \r\n            if(event.target.id === 'weaponRarity'){\r\n                stateObject['totalSlots'] = this.extraSlotPerLevelRarity[event.target.value][this.state.extraSlotsLevel]\r\n                totalSlots = this.extraSlotPerLevelRarity[event.target.value][this.state.extraSlotsLevel]\r\n            }\r\n            else{\r\n                totalSlots = this.state.totalSlots\r\n            }\r\n        }\r\n        for(var x in this.augmentSlotRequirements)\r\n        {\r\n            if(event.target.id.split('Old')[0] === x){\r\n                slotsUsed += this.augmentSlotRequirements[event.target.id.split('Old')[0]][event.target.value]\r\n            }\r\n            else{\r\n                slotsUsed += this.augmentSlotRequirements[x][this.state[x]]\r\n            }\r\n        }\r\n        \r\n        \r\n        if(slotsUsed > totalSlots){\r\n            stateObject['slotOverflow'] = true\r\n        }\r\n        else{\r\n            stateObject['slotOverflow'] = false\r\n        }\r\n        stateObject['slotsUsed'] = slotsUsed\r\n        this.setState((prevState)=>(stateObject))\r\n    }\r\n    render(){\r\n        return (\r\n                <React.Fragment>\r\n                    <tr className = {this.props.classname} id= 'tableInputRow' key = {this.props.rowIndex}>\r\n                        <td>\r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'weaponRarity'\r\n                                onChange = {this.handleAugmentsChange}  value = {this.state.weaponRarity}>\r\n                                <option val = '12'> 12 </option>\r\n                                <option val = '11'> 11 </option>\r\n                                <option val = '10'> 10 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <input onChange = {this.handleAugmentsChange} value = {this.state.weaponName} className = 'form-control' id = 'weaponName'/>\r\n                        </td>\r\n                        <td></td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'extraSlotsLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.extraSlotsLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                            </select> \r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'attackLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.attackLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select> \r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'affinityLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.affinityLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'healthLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.healthLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'elementLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.elementLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td > \r\n                            <label className = 'form-control' id = 'slotsUsed' style = {this.state.slotOverflow ? this.errorStyle : {}}> {this.state.slotsUsed} / {this.state.totalSlots} </label>\r\n                        </td>\r\n                        <td > \r\n                            <Toggle\r\n                                defaultChecked={this.state.includeSubaugments}\r\n                                name='includeSubaugments'\r\n                                value='yes' \r\n                                onChange={this.handleSubaugmentsChange}/>\r\n                        </td>\r\n                        <td> \r\n                            <button className = 'btn btn-primary' onClick = {()=> this.saveWeapon()}> Save </button>\r\n                        </td>\r\n                        <td> \r\n                            <button className = 'btn btn-primary' onClick = {()=> this.clearWeapon()}> Clear </button>\r\n                        </td>\r\n                        \r\n                    </tr>\r\n                    <tr className = {this.props.classname} id= 'currentSettingsRow'>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td  id = 'currentStatsLabel'>\r\n                            <label>Current Stats: </label>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'extraSlotsLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.extraSlotsLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                            </select> \r\n                        </td>\r\n\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'attackLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.attackLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select> \r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'affinityLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.affinityLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'healthLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.healthLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'elementLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.elementLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> </td>\r\n                        <td> </td>\r\n                        <td> </td>\r\n                        <td> </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nexport default function WeaponTableHeader() {\r\n    return (\r\n        <React.Fragment>\r\n            <thead>\r\n                <tr>\r\n                    <th> Rarity </th>\r\n                    <th> Name </th>\r\n                    <th> </th>\r\n                    <th> Extra Slots </th>\r\n                    <th> Attack </th>\r\n                    <th> Affinity </th>\r\n                    <th> Health </th>\r\n                    <th> Element </th>\r\n                    <th> Slots Used </th>\r\n                    <th> Include All <br/> Subaugments? </th>\r\n                    <th>  </th>\r\n                    <th>  </th>\r\n                </tr>\r\n                    \r\n            </thead>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport InputRow from './InputRow.js'\r\nimport WeaponTableHeader from './WeaponTableHeader.js'\r\nexport default class WeaponTable extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.renderTableData = this.renderTableData.bind(this)\r\n        this.deleteWeapon = this.deleteWeapon.bind(this)\r\n        this.editWeapon = this.editWeapon.bind(this)\r\n        this.saveEditedWeapon = this.saveEditedWeapon.bind(this)\r\n        this.state  = {\r\n            weaponDataList : this.props.weaponDataList\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ weaponDataList: nextProps.weaponDataList });\r\n    }\r\n    editWeapon(index){\r\n        let weaponDataList = this.state.weaponDataList\r\n        weaponDataList[index]['readOnly'] = false\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        })\r\n    }\r\n    saveEditedWeapon(index){\r\n        let weaponDataList = this.state.weaponDataList\r\n        weaponDataList[index]['readOnly'] = true\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        })\r\n    }\r\n    deleteWeapon(index){\r\n        let weaponDataList = this.state.weaponDataList\r\n        weaponDataList.splice(index,index+1)\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        })\r\n        localStorage.setItem('weaponDataList', JSON.stringify(weaponDataList))\r\n    }\r\n    renderTableData(){\r\n        let weaponDataList = this.state.weaponDataList\r\n        if(weaponDataList == null){\r\n            weaponDataList = []\r\n        }\r\n        return weaponDataList.map((weapon, index)=>{\r\n            const {weaponRarity, weaponName, extraSlotsLevel, attackLevel, affinityLevel, healthLevel, elementLevel, slotsUsed, totalSlots,\r\n                    extraSlotsLevelOld, attackLevelOld, affinityLevelOld, healthLevelOld, elementLevelOld, readOnly, includeSubaugments} = weapon\r\n            let row\r\n            if(readOnly){\r\n                row = <tr key = {index}>\r\n                    <td>{weaponRarity}</td>\r\n                    <td>{weaponName}</td>\r\n                    <td className = 'align-right'>New Augments : <br/> Old Augments: </td>\r\n                    <td>{extraSlotsLevel} <br/> {extraSlotsLevelOld} </td>\r\n                    <td>{attackLevel} <br/> {attackLevelOld} </td>\r\n                    <td>{affinityLevel} <br/> {affinityLevelOld} </td>\r\n                    <td>{healthLevel} <br/> {healthLevelOld} </td>\r\n                    <td>{elementLevel} <br/> {elementLevelOld} </td>\r\n                    <td>{slotsUsed}/{totalSlots}</td>\r\n                    <td>{includeSubaugments ? 'True' : 'False'}</td>\r\n                    <td><button className = 'btn btn-primary' onClick = {()=> this.editWeapon(index)}> Edit </button></td>\r\n                    <td><button className = 'btn btn-primary' onClick = {()=> this.deleteWeapon(index)}> X </button></td>\r\n                </tr>\r\n            }\r\n            else{\r\n                row = <InputRow extraSlotPerLevelRarity = {this.props.extraSlotPerLevelRarity} augmentSlotRequirements = {this.props.augmentSlotRequirements} rowData = {weaponDataList[index]} key = {index} refreshWeaponData = {this.props.refreshWeaponData} rowIndex = {index} classname = 'inputRow'/>\r\n            }\r\n            return(row)\r\n        })\r\n    }\r\n \r\n    render(){\r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <table className = 'table'>\r\n                    <WeaponTableHeader />\r\n                    <tbody>\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                        \r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n","import React from 'react'\r\nimport recipies from '../json/recipies.json';\r\nexport function MaterialsTable(props) {\r\n    let weaponDataList = props.weaponDataList\r\n    let augmentsList = {\r\n        \"12\" : {},\r\n        \"11\" : {},\r\n        \"10\" : {}\r\n    }\r\n    let weaponRarity = 12\r\n    let includeSubaugments = false\r\n    let affinityLevel = 0\r\n    let affinityLevelOld = 0\r\n    let attackLevel = 0\r\n    let attackLevelOld = 0\r\n    let elementLevel = 0\r\n    let elementLevelOld = 0\r\n    let extraSlotsLevel = 0\r\n    let extraSlotsLevelOld = 0\r\n    let healthLevel = 0\r\n    let healthLevelOld = 0\r\n    for(var x in weaponDataList){\r\n        weaponRarity = weaponDataList[x][\"weaponRarity\"]\r\n        includeSubaugments = weaponDataList[x][\"includeSubaugments\"]\r\n        affinityLevel = parseInt(weaponDataList[x][\"affinityLevel\"])\r\n        affinityLevelOld = parseInt(weaponDataList[x][\"affinityLevelOld\"])\r\n        attackLevel = parseInt(weaponDataList[x][\"attackLevel\"])\r\n        attackLevelOld = parseInt(weaponDataList[x][\"attackLevelOld\"])\r\n        elementLevel = parseInt(weaponDataList[x][\"elementLevel\"])\r\n        elementLevelOld = parseInt(weaponDataList[x][\"elementLevelOld\"])\r\n        extraSlotsLevel = parseInt(weaponDataList[x][\"extraSlotsLevel\"])\r\n        extraSlotsLevelOld = parseInt(weaponDataList[x][\"extraSlotsLevelOld\"])\r\n        healthLevel = parseInt(weaponDataList[x][\"healthLevel\"])\r\n        healthLevelOld = parseInt(weaponDataList[x][\"healthLevelOld\"])\r\n\r\n        if(includeSubaugments){\r\n            for(let i = (parseInt(attackLevelOld)+1); i<= attackLevel; i++){\r\n                if(\"Attack \" + i in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Attack \" + i] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Attack \" + i] = 1\r\n                }\r\n            }\r\n            for(let i = (parseInt(elementLevelOld)+1); i<= elementLevel; i++){\r\n                if(\"Element \" + i in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Element \" + i] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Element \" + i] = 1\r\n                }\r\n            }\r\n            for(let i = (parseInt(affinityLevelOld)+1); i<= affinityLevel; i++){\r\n                if(\"Affinity \" + i in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Affinity \" + i] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Affinity \" + i] = 1\r\n                }\r\n            }\r\n            for(let i = (parseInt(healthLevelOld)+1); i<= healthLevel; i++){\r\n                if(\"Health \" + i in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Health \" + i] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Health \" + i] = 1\r\n                }\r\n            }\r\n            for(let i = (parseInt(extraSlotsLevelOld)+1); i<= extraSlotsLevel; i++){\r\n                if(\"Extra Slots \" + i in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Extra Slots \" + i] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Extra Slots \" + i] = 1\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(attackLevel !== 0){\r\n                if(\"Attack \" + attackLevel in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Attack \" + attackLevel] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Attack \" + attackLevel] = 1\r\n                }\r\n            }\r\n            if(affinityLevel !== 0){\r\n                if(\"Affinity \" + affinityLevel in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Affinity \" + affinityLevel] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Affinity \" + affinityLevel] = 1\r\n                }\r\n            }\r\n            if(elementLevel !== 0){\r\n                if(\"Element \" + elementLevel in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Element \" + elementLevel] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Attack \" + elementLevel] = 1\r\n                }\r\n            }\r\n            if(healthLevel !== 0){\r\n                if(\"Health \" + healthLevel in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Health \" + healthLevel] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Health \" + healthLevel] = 1\r\n                }\r\n            }\r\n            if(extraSlotsLevel !== 0){\r\n                if(\"Extra Slots \" + extraSlotsLevel in augmentsList[weaponRarity]){\r\n                    augmentsList[weaponRarity][\"Extra Slots \" + extraSlotsLevel] += 1\r\n                }\r\n                else{\r\n                    augmentsList[weaponRarity][\"Extra Slots \" + extraSlotsLevel] = 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let materialsDict = {}\r\n    for(let rarity in augmentsList){\r\n        for(let augmentName in augmentsList[rarity]){\r\n            for(let augmentMaterial in recipies[rarity][augmentName]){\r\n                if(augmentMaterial in materialsDict){\r\n                    materialsDict[augmentMaterial] += recipies[rarity][augmentName][augmentMaterial] * augmentsList[rarity][augmentName]\r\n                }\r\n                else{\r\n                    materialsDict[augmentMaterial] = recipies[rarity][augmentName][augmentMaterial] * augmentsList[rarity][augmentName]\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <table className = 'table' id =''>\r\n                <thead className = ''>\r\n                    <tr>\r\n                        <th> Name </th>\r\n                        <th> Quantity </th>\r\n                        {/* <th> Monster(s) </th>\r\n                        <th> Biome </th>\r\n                        <th> Rarity </th> */}\r\n                    </tr>\r\n                </thead>\r\n                <tbody id = 'materialsTableBody'>\r\n                    {\r\n                        Object.keys(materialsDict).map((key, index) => ( \r\n                            <MaterialsRow key = {index} materialName = {key} materialQuantity = {materialsDict[key]}/>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MaterialsRow(props){\r\n    return(\r\n        <React.Fragment>\r\n            <tr>\r\n                <td> { props.materialName } </td>\r\n                <td> { props.materialQuantity } </td>\r\n                {/* <td> { props.monsterDrop } </td>\r\n                <td> { props.monsterBiome } </td>\r\n                <td> { props.monsterRarity } </td> */}\r\n            </tr>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default MaterialsTable","import React, {Component} from 'react'\r\nimport InputRow from './InputRow.js'\r\nimport WeaponTableHeader from './WeaponTableHeader.js'\r\nexport default class InputTable extends Component {\r\n    render(){\r\n        \r\n        return (\r\n            <div>\r\n                <table className = 'table' id ='newWeaponsTable'>\r\n                    <WeaponTableHeader classname = ''/>\r\n                    <tbody>\r\n                        <InputRow extraSlotPerLevelRarity = {this.props.extraSlotPerLevelRarity} augmentSlotRequirements = {this.props.augmentSlotRequirements} refreshWeaponData = {this.props.refreshWeaponData}/>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n","import React, { Component } from 'react'\r\nimport WeaponTable from './WeaponTable'\r\nimport MaterialsTable from './MaterialsTable'\r\nimport InputTable from './InputTable'\r\nimport extraSlotPerLevelRarity from '../json/extraSlotPerLevelRarity.json'\r\nimport augmentSlotRequirements from '../json/augmentSlotRequirements.json'\r\nexport class Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            weaponDataList : JSON.parse(localStorage.getItem('weaponDataList'))\r\n        }\r\n        this.refreshWeaponData = this.refreshWeaponData.bind(this)\r\n    }\r\n    refreshWeaponData(weaponDataList){\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        })\r\n    }\r\n    \r\n    render() { \r\n        return (\r\n            <div>\r\n                <div className = 'container'>\r\n                    <InputTable extraSlotPerLevelRarity = {extraSlotPerLevelRarity} augmentSlotRequirements = {augmentSlotRequirements} refreshWeaponData = {this.refreshWeaponData} />\r\n                    <WeaponTable  refreshWeaponData = {this.refreshWeaponData} weaponDataList = {this.state.weaponDataList} extraSlotPerLevelRarity = {extraSlotPerLevelRarity} augmentSlotRequirements = {augmentSlotRequirements}/>\r\n                    <MaterialsTable weaponDataList = {this.state.weaponDataList}/>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Main } from './components/Main.js'\n// import { BrowserRouter as Router} from 'react-router-dom';\n// import { Route } from 'react-router'\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Route exact path={`/mhw-wishlist`} render={ (routerProps) => } /> */}\n      < Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, Link, HashRouter as Router } from 'react-router-dom'\n\n\nlet routing = (\n    <Router>\n        <div>\n            <Route path=\"/\" component = {App}></Route>\n        </div>\n    </Router>\n)\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}