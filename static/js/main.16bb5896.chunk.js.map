{"version":3,"sources":["components/WeaponTableHeader.js","components/WeaponTable.js","components/MaterialsTable.js","components/InputTable.js","components/Main.js","App.js","serviceWorker.js","index.js","components/InputRow.js"],"names":["WeaponTableHeader","Fragment","WeaponTable","props","renderTableData","bind","deleteWeapon","editWeapon","saveEditedWeapon","state","weaponDataList","JSON","parse","nextProps","this","setState","index","splice","localStorage","setItem","stringify","map","weapon","weaponRarity","weaponName","extraSlotsLevel","attackLevel","affinityLevel","healthLevel","elementLevel","slotsUsed","totalSlots","extraSlotsLevelOld","attackLevelOld","affinityLevelOld","healthLevelOld","elementLevelOld","readOnly","includeSubaugments","key","className","onClick","InputRow","rowData","refreshWeaponData","rowIndex","classname","Component","MaterialsTable","id","InputTable","Main","getItem","refreshMaterialsData","console","log","recipies","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","slotOverflow","weaponNameOld","weaponRarityOld","handleSubaugmentsChange","clearWeapon","saveWeapon","handleAugmentsChange","extraSlotPerLevelRarity","augmentSlotRequirements","errorStyle","color","border","event","target","checked","eval","push","stateObject","value","split","x","prevState","onChange","val","style","defaultChecked","name"],"mappings":"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","file":"static/js/main.16bb5896.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function WeaponTableHeader() {\r\n    return (\r\n        <React.Fragment>\r\n            <thead>\r\n                <tr>\r\n                    <th> Rarity </th>\r\n                    <th> Name </th>\r\n                    <th> </th>\r\n                    <th> Extra Slots </th>\r\n                    <th> Attack </th>\r\n                    <th> Affinity </th>\r\n                    <th> Health </th>\r\n                    <th> Element </th>\r\n                    <th> Slots Used </th>\r\n                    <th> Include All <br/> Subaugments? </th>\r\n                    <th>  </th>\r\n                    <th>  </th>\r\n                </tr>\r\n                    \r\n            </thead>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport InputRow from './InputRow.js'\r\nimport WeaponTableHeader from './WeaponTableHeader.js'\r\nexport default class WeaponTable extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.renderTableData = this.renderTableData.bind(this)\r\n        this.deleteWeapon = this.deleteWeapon.bind(this)\r\n        this.editWeapon = this.editWeapon.bind(this)\r\n        this.saveEditedWeapon = this.saveEditedWeapon.bind(this)\r\n        this.state  = {\r\n            weaponDataList : JSON.parse(this.props.weaponDataList)\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ weaponDataList: nextProps.weaponDataList });\r\n    }\r\n    editWeapon(index){\r\n        let weaponDataList = this.state.weaponDataList\r\n        weaponDataList[index]['readOnly'] = false\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        })\r\n    }\r\n    saveEditedWeapon(index){\r\n        let weaponDataList = this.state.weaponDataList\r\n        weaponDataList[index]['readOnly'] = true\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        })\r\n    }\r\n    deleteWeapon(index){\r\n        let weaponDataList = this.state.weaponDataList\r\n        weaponDataList.splice(index,index+1)\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        })\r\n        localStorage.setItem('weaponDataList', JSON.stringify(weaponDataList))\r\n    }\r\n    renderTableData(){\r\n        let weaponDataList = this.state.weaponDataList\r\n        if(weaponDataList == null){\r\n            weaponDataList = []\r\n        }\r\n        return weaponDataList.map((weapon, index)=>{\r\n            const {weaponRarity, weaponName, extraSlotsLevel, attackLevel, affinityLevel, healthLevel, elementLevel, slotsUsed, totalSlots,\r\n                    extraSlotsLevelOld, attackLevelOld, affinityLevelOld, healthLevelOld, elementLevelOld, readOnly, includeSubaugments} = weapon\r\n            let row\r\n            if(readOnly){\r\n                row = <tr key = {index}>\r\n                    <td>{weaponRarity}</td>\r\n                    <td>{weaponName}</td>\r\n                    <td className = 'align-right'>New Augments : <br/> Old Augments: </td>\r\n                    <td>{extraSlotsLevel} <br/> {extraSlotsLevelOld} </td>\r\n                    <td>{attackLevel} <br/> {attackLevelOld} </td>\r\n                    <td>{affinityLevel} <br/> {affinityLevelOld} </td>\r\n                    <td>{healthLevel} <br/> {healthLevelOld} </td>\r\n                    <td>{elementLevel} <br/> {elementLevelOld} </td>\r\n                    <td>{slotsUsed}/{totalSlots}</td>\r\n                    <td>{includeSubaugments ? 'True' : 'False'}</td>\r\n                    <td><button className = 'btn btn-primary' onClick = {()=> this.editWeapon(index)}> Edit </button></td>\r\n                    <td><button className = 'btn btn-primary' onClick = {()=> this.deleteWeapon(index)}> X </button></td>\r\n                </tr>\r\n            }\r\n            else{\r\n                row = <InputRow rowData = {weaponDataList[index]} key = {index} refreshWeaponData = {this.props.refreshWeaponData} rowIndex = {index} classname = 'inputRow'/>\r\n            }\r\n            return(row)\r\n        })\r\n    }\r\n \r\n    render(){\r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <table className = 'table'>\r\n                    <WeaponTableHeader />\r\n                    <tbody>\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                        \r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport function MaterialsTable(props) {\r\n    return (\r\n        <div>\r\n            <table className = 'table' id =''>\r\n                <thead className = ''>\r\n                    <tr>\r\n                        <th> Name </th>\r\n                        <th> Quantity </th>\r\n                        <th> Monster(s) </th>\r\n                        <th> Biome </th>\r\n                        <th> Rarity </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id = 'materialsTableBody'>\r\n                    \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MaterialsTable","import React, {Component} from 'react'\r\nimport InputRow from './InputRow.js'\r\nimport WeaponTableHeader from './WeaponTableHeader.js'\r\nexport default class InputTable extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n    render(){\r\n        \r\n        return (\r\n            <div>\r\n                <table className = 'table' id ='newWeaponsTable'>\r\n                    <WeaponTableHeader classname = ''/>\r\n                    <tbody>\r\n                        <InputRow refreshWeaponData = {this.props.refreshWeaponData}/>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\n","import React, { Component } from 'react'\r\nimport WeaponTable from './WeaponTable'\r\nimport MaterialsTable from './MaterialsTable'\r\nimport InputTable from './InputTable'\r\nimport recipies from '../json/recipies.json';\r\nexport class Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            weaponDataList : localStorage.getItem('weaponDataList')\r\n        }\r\n        this.refreshWeaponData = this.refreshWeaponData.bind(this)\r\n        this.refreshMaterialsData = this.refreshMaterialsData.bind(this)\r\n    }\r\n    refreshWeaponData(weaponDataList){\r\n        console.log(\"asdf\" + weaponDataList)\r\n        this.setState({\r\n            weaponDataList : weaponDataList\r\n        },\r\n        ()=>{\r\n            console.log(this.state.weaponDataList)\r\n        })\r\n        this.refreshMaterialsData()\r\n    }\r\n    \r\n    refreshMaterialsData(){\r\n        console.log(\"asdfasdfasdfasdfasdfasdfdasf\")\r\n        console.log(recipies)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className = 'container'>\r\n                    <InputTable  refreshWeaponData = {this.refreshWeaponData} />\r\n                    <WeaponTable refreshWeaponData = {this.refreshWeaponData} weaponDataList = {this.state.weaponDataList}/>\r\n                    <MaterialsTable />\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport { Main } from './components/Main.js'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react'\r\nimport Toggle from 'react-toggle'\r\nexport default class InputRow extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        if(this.props.rowData){\r\n            this.state = this.props.rowData\r\n        }\r\n        else{\r\n            this.state = {\r\n                includeSubaugments  : true,\r\n                slotsUsed           : 0,\r\n                totalSlots          : 3,\r\n                extraSlotsLevel     : 0,\r\n                attackLevel         : 0,\r\n                affinityLevel       : 0,\r\n                healthLevel         : 0,\r\n                elementLevel        : 0,\r\n                weaponName          : '',\r\n                weaponRarity        : 12,\r\n                slotOverflow        : false,\r\n                extraSlotsLevelOld  : 0,\r\n                attackLevelOld      : 0,\r\n                affinityLevelOld    : 0,\r\n                healthLevelOld      : 0,\r\n                elementLevelOld     : 0,\r\n                weaponNameOld       : '',\r\n                weaponRarityOld     : 12,\r\n                readOnly            : true,\r\n            }\r\n        }\r\n        \r\n        this.handleSubaugmentsChange = this.handleSubaugmentsChange.bind(this)\r\n        this.clearWeapon = this.clearWeapon.bind(this)\r\n        this.saveWeapon = this.saveWeapon.bind(this)\r\n        this.handleAugmentsChange = this.handleAugmentsChange.bind(this)\r\n        this.extraSlotPerLevelRarity = {\r\n            '12' : { '0' : 3, '1' : 4, '2' : 5, '3' : 6  },\r\n            '11' : { '0' : 4, '1' : 5, '2' : 6, '3' : 8  },\r\n            '10' : { '0' : 5, '1' : 7, '2' : 9, '3' : 10 }\r\n        }\r\n        this.augmentSlotRequirements = {\r\n            'attackLevel'   : [0, 3, 5, 7, 9],\r\n            'affinityLevel' : [0, 2, 4, 6, 8],\r\n            'healthLevel'   : [0, 3, 5],\r\n            'elementLevel'  : [0, 1, 3, 5, 7],\r\n        }\r\n        this.errorStyle = {\r\n            color : 'red',\r\n            border : 'solid red',\r\n        }\r\n    }\r\n    handleSubaugmentsChange(event) {\r\n        // do something with event.target.checked\r\n        this.setState(\r\n            {\r\n                includeSubaugments : event.target.checked\r\n            }\r\n        ) \r\n    }\r\n    \r\n    saveWeapon(){      \r\n        if(this.state.slotsUsed <= this.state.totalSlots){\r\n            var weaponDataList = eval(localStorage.getItem('weaponDataList'))\r\n            if(weaponDataList === null){\r\n                weaponDataList = [this.state]\r\n            }\r\n            else if(this.props.rowIndex >= 0){\r\n                this.setState({\r\n                    readOnly : true\r\n                },()=>{\r\n                    weaponDataList[this.props.rowIndex] = this.state\r\n                    localStorage.setItem('weaponDataList', JSON.stringify(weaponDataList))\r\n                    this.props.refreshWeaponData(weaponDataList)\r\n                    this.clearWeapon()\r\n                })\r\n                \r\n            }\r\n            else{\r\n                weaponDataList.push(this.state)\r\n                localStorage.setItem('weaponDataList', JSON.stringify(weaponDataList))\r\n                this.props.refreshWeaponData(weaponDataList)\r\n                this.clearWeapon()\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                slotOverflow : true\r\n            })\r\n        }\r\n    }\r\n    clearWeapon(){\r\n        this.setState(\r\n            {\r\n                slotsUsed           : 0,\r\n                totalSlots          : 3,\r\n                extraSlotsLevel     : 0,\r\n                attackLevel         : 0,\r\n                affinityLevel       : 0,\r\n                healthLevel         : 0,\r\n                elementLevel        : 0,\r\n                weaponName          : '',\r\n                weaponRarity        : 12,\r\n                slotOverflow        : false,\r\n                extraSlotsLevelOld  : 0,\r\n                attackLevelOld      : 0,\r\n                affinityLevelOld    : 0,\r\n                healthLevelOld      : 0,\r\n                elementLevelOld     : 0,\r\n                weaponNameOld       : '',\r\n                weaponRarityOld     : 12,\r\n                readOnly            : true,\r\n            }\r\n        ) \r\n    }\r\n    handleAugmentsChange(event){\r\n        var stateObject = {}\r\n        if(event.target.id === 'extraSlotsLevel'){            \r\n            stateObject['extraSlotsLevel'] = event.target.value\r\n            stateObject['totalSlots'] = this.extraSlotPerLevelRarity[this.state.weaponRarity][event.target.value]\r\n            if(stateObject['extraSlotsLevel'] > stateObject['totalSlots']){\r\n                stateObject['slotOverflow'] = true\r\n            }\r\n            else{\r\n                stateObject['slotOverflow'] = false\r\n            }\r\n        }\r\n        else{\r\n            stateObject[event.target.id] = event.target.value\r\n            if(event.target.value > this.state[event.target.id.split('Old')[0]]){\r\n                stateObject[event.target.id.split('Old')[0]] = event.target.value\r\n            }\r\n            if(event.target.value < this.state[event.target.id.split('Old')[0]]){\r\n                stateObject[event.target.id.split('Old')[0] + 'Old'] = event.target.value\r\n            }\r\n            \r\n            var slotsUsed = 0\r\n            \r\n            for(var x in this.augmentSlotRequirements)\r\n            {\r\n                if(event.target.id.split('Old')[0] === x){\r\n                    slotsUsed += this.augmentSlotRequirements[event.target.id.split('Old')[0]][event.target.value]\r\n                }\r\n                else{\r\n                    slotsUsed += this.augmentSlotRequirements[x][this.state[x]]\r\n                }\r\n            }\r\n            let totalSlots\r\n            if(event.target.id === 'weaponRarity'){\r\n                stateObject['totalSlots'] = this.extraSlotPerLevelRarity[event.target.value][this.state.extraSlotsLevel]\r\n                totalSlots = this.extraSlotPerLevelRarity[event.target.value][this.state.extraSlotsLevel]\r\n            }\r\n            else{\r\n                totalSlots = this.state.totalSlots\r\n            }\r\n            if(slotsUsed > totalSlots){\r\n                stateObject['slotOverflow'] = true\r\n            }\r\n            else{\r\n                stateObject['slotOverflow'] = false\r\n            }\r\n            stateObject['slotsUsed'] = slotsUsed\r\n        }\r\n        this.setState((prevState)=>(stateObject))\r\n    }\r\n    render(){\r\n        return (\r\n                <React.Fragment>\r\n                    <tr className = {this.props.classname} id= 'tableInputRow' key = {this.props.rowIndex}>\r\n                        <td>\r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'weaponRarity'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.weaponRarity}>\r\n                                <option val = '12'> 12 </option>\r\n                                <option val = '11'> 11 </option>\r\n                                <option val = '10'> 10 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <input className = 'form-control' id = 'weaponName'/>\r\n                        </td>\r\n                        <td></td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'extraSlotsLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.extraSlotsLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                            </select> \r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'attackLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.attackLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select> \r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'affinityLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.affinityLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'healthLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.healthLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'elementLevel'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.elementLevel}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td > \r\n                            <label className = 'form-control' id = 'slotsUsed' style = {this.state.slotOverflow ? this.errorStyle : {}}> {this.state.slotsUsed} / {this.state.totalSlots} </label>\r\n                        </td>\r\n                        <td > \r\n                            <Toggle\r\n                                defaultChecked={this.state.includeSubaugments}\r\n                                name='includeSubaugments'\r\n                                value='yes' \r\n                                onChange={this.handleSubaugmentsChange}/>\r\n                        </td>\r\n                        <td> \r\n                            <button className = 'btn btn-primary' onClick = {()=> this.saveWeapon()}> Save </button>\r\n                        </td>\r\n                        <td> \r\n                            <button className = 'btn btn-primary' onClick = {()=> this.clearWeapon()}> Clear </button>\r\n                        </td>\r\n                        \r\n                    </tr>\r\n                    <tr className = {this.props.classname} id= 'currentSettingsRow'>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td  id = 'currentStatsLabel'>\r\n                            <label>Current Stats: </label>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'extraSlotsLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.extraSlotsLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                            </select> \r\n                        </td>\r\n\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'attackLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.attackLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select> \r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'affinityLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.affinityLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'healthLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.healthLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> \r\n                            <select className ='browser-default custom-select augmentsSelect' id = 'elementLevelOld'\r\n                                onChange = {this.handleAugmentsChange} value = {this.state.elementLevelOld}>\r\n                                <option className = 'lvl0' val = '0'> 0 </option>\r\n                                <option className = 'lvl1' val = '1'> 1 </option>\r\n                                <option className = 'lvl2' val = '2'> 2 </option>\r\n                                <option className = 'lvl3' val = '3'> 3 </option>\r\n                                <option className = 'lvl4' val = '4'> 4 </option>\r\n                            </select>\r\n                        </td>\r\n                        <td> </td>\r\n                        <td> </td>\r\n                        <td> </td>\r\n                        <td> </td>\r\n                    </tr>\r\n                </React.Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\n"],"sourceRoot":""}